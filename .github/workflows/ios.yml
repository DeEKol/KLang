name: iOS CI (RN 0.81)

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  build-ios:
    runs-on: macos-latest
    timeout-minutes: 60
    env:
      NODE_VERSION: "20"
      IOS_SDK: "iphonesimulator"
      SIMULATOR_NAME: "iPhone 16"
      SIMULATOR_OS: "18.5"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install JS dependencies
        run: npm ci

      - name: Setup Ruby (for CocoaPods)
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.1"

      - name: Install CocoaPods
        run: |
          set -e
          gem install cocoapods -v 1.16.0 || gem install cocoapods
          gem install xcpretty -v 0.3.0 || true
          gem install xcpretty-travis-formatter || true
          cd ios
          pod install --repo-update
          cd ..

      - name: Cache CocoaPods & Pods
        uses: actions/cache@v4
        with:
          path: |
            ios/Pods
            ~/.cocoapods
            ios/Podfile.lock
          key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Build iOS for simulator
        env:
          IOS_SDK: 'iphonesimulator'
          SIMULATOR_NAME: 'iPhone 16'
          SIMULATOR_OS: '18.5'
        run: |
          set -o pipefail

          WORKSPACE="ios/KLang.xcworkspace"
          SCHEME="KLang"
          DEST="platform=iOS Simulator,OS=${SIMULATOR_OS},name=${SIMULATOR_NAME},arch=arm64"

          echo "Building workspace: $WORKSPACE scheme: $SCHEME dest: $DEST"

          export DERIVED_DATA="${HOME}/Library/Developer/Xcode/DerivedData/${GITHUB_RUN_ID}"
          mkdir -p "${DERIVED_DATA}"

          xcodebuild -workspace "$WORKSPACE" \
            -scheme "$SCHEME" \
            -sdk "${IOS_SDK}" \
            -configuration Debug \
            -destination "${DEST}" \
            -derivedDataPath "${DERIVED_DATA}" \
            clean build \
            -parallelizeTargets -quiet -UseModernBuildSystem=YES | xcpretty || true

          tail -n 200 "${DERIVED_DATA}/Logs/Build/*" || true

