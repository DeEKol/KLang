name: Android CI (RN 0.81)

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  build-android:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      NODE_VERSION: "20"
      # Если нужно явно, можно указать ANDROID_SDK_ROOT здесь, иначе CI попытается использовать системный путь
      ANDROID_SDK_ROOT: /usr/lib/android-sdk
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install JS dependencies
        run: npm ci

      - name: Setup Java 11 (Temurin)
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "11"

      - name: Ensure Android SDK & tools (platform 36 + build-tools 36.0.0)
        env:
          ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}
        run: |
          set -e
          # Ensure $ANDROID_SDK_ROOT exists — on GitHub runners default paths may vary
          echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT"
          mkdir -p "${ANDROID_SDK_ROOT}/cmdline-tools/latest" || true
          # Accept licenses and install required components
          yes | sdkmanager --licenses || true
          sdkmanager --install "platform-tools" "platforms;android-36" "build-tools;36.0.0" "emulator" "cmdline-tools;latest"

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Clean Android build
        run: |
          cd android
          ./gradlew clean
          cd ..

      - name: Assemble Debug APK (RN 0.81 safe defaults)
        env:
          ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}
        run: |
          set -e
          cd android
          # -PdisableFlipper=true is recommended for CI to avoid extra debug deps
          ./gradlew assembleDebug -PdisableFlipper=true --no-daemon --stacktrace
          cd ..

      - name: Upload APK artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: android/app/build/outputs/apk/debug/app-debug.apk
